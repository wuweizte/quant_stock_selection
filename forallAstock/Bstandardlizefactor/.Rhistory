standardlized.monthly.deductprofit.simple.rate[is.na(standardlized.monthly.deductprofit.simple.rate)] <- 0
write.csv(standardlized.monthly.deductprofit.simple.rate,
"D:\\MyR\\quantprog\\Bstandardlizefactor\\standardlized.monthly.deductprofit.simple.rate.csv")
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.pettm.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.pettm.data.csv",
stringsAsFactors = FALSE)
processed.monthly.pettm.data <- t(monthly.pettm.data[,-1])
pettm.column.names <- monthly.pettm.data$code
pettm.row.names <- colnames(monthly.pettm.data)[-(1:2)]
processed.monthly.pettm.data <- processed.monthly.pettm.data[-1,]
processed.monthly.pettm.data <- array(as.numeric(processed.monthly.pettm.data),
dim = dim(processed.monthly.pettm.data))
colnames(processed.monthly.pettm.data) <- pettm.column.names
row.names(processed.monthly.pettm.data) <- pettm.row.names
####delete the data of 2007-12
processed.monthly.pettm.data <- processed.monthly.pettm.data[-1,]
processed.monthly.pettm.data <- t(monthly.pettm.data[,-1])
pettm.column.names <- monthly.pettm.data$code
pettm.row.names <- colnames(monthly.pettm.data)[-(1:2)]
processed.monthly.pettm.data <- processed.monthly.pettm.data[-1,]
processed.monthly.pettm.data <- array(as.numeric(processed.monthly.pettm.data),
dim = dim(processed.monthly.pettm.data))
colnames(processed.monthly.pettm.data) <- pettm.column.names
row.names(processed.monthly.pettm.data) <- pettm.row.names
####delete the data of 2007-12
# processed.monthly.pettm.data <- processed.monthly.pettm.data[-1,]
View(processed.monthly.pettm.data)
processed.monthly.pettm.data <- t(monthly.pettm.data[,-1])
pettm.column.names <- monthly.pettm.data$code
pettm.row.names <- colnames(monthly.pettm.data)[-(1:2)]
processed.monthly.pettm.data <- processed.monthly.pettm.data[-1,]
processed.monthly.pettm.data <- array(as.numeric(processed.monthly.pettm.data),
dim = dim(processed.monthly.pettm.data))
colnames(processed.monthly.pettm.data) <- pettm.column.names
row.names(processed.monthly.pettm.data) <- pettm.row.names
####delete the data of 2018-1
processed.monthly.pettm.data <- processed.monthly.pettm.data[-nrow(processed.monthly.pettm.data),]
delimitvalue.monthly.pettm.data <- apply(processed.monthly.pettm.data, 1, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
delimitvalue.monthly.pettm.data <- apply(delimitvalue.monthly.pettm.data, 2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
preProcValues <- preProcess(delimitvalue.monthly.pettm.data, method = c("center","scale"))
standardlized.monthly.pettm.data <- predict(preProcValues, delimitvalue.monthly.pettm.data)
standardlized.monthly.pettm.data[is.na(standardlized.monthly.pettm.data)] <- 0
View(standardlized.monthly.pettm.data)
colnames(standardlized.monthly.pettm.data)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.rating.avg <- read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.rating.avg.csv",
stringsAsFactors = FALSE)
processed.monthly.rating.avg <- monthly.rating.avg[,-1]
row.names(processed.monthly.rating.avg) <- monthly.rating.avg[,1]
####delete the data of 2018-1
processed.monthly.rating.avg <- processed.monthly.rating.avg[,-ncol(processed.monthly.rating.avg)]
View(processed.monthly.rating.avg)
names(processed.monthly.rating.avg)
delimitvalue.monthly.rating.avg <- apply(processed.monthly.rating.avg,2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
### 两次去极值
delimitvalue.monthly.rating.avg <- apply(delimitvalue.monthly.rating.avg, 2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
preProcValues <- preProcess(delimitvalue.monthly.rating.avg, method = c("center","scale"))
standardlized.monthly.rating.avg <- predict(preProcValues, delimitvalue.monthly.rating.avg)
standardlized.monthly.rating.avg[is.na(standardlized.monthly.rating.avg)] <- 0
View(standardlized.monthly.rating.avg)
colnames(standardlized.monthly.rating.avg)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.risk.variance60 <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.risk.variance60.csv",
stringsAsFactors = FALSE)
processed.monthly.risk.variance60 <- t(monthly.risk.variance60[,-c(1,ncol(monthly.risk.variance60))])
risk.variance60.column.names <- monthly.risk.variance60[,1]
risk.variance60.row.names <- colnames(monthly.risk.variance60)[-c(1, length(monthly.risk.variance60))]
processed.monthly.risk.variance60 <- array(as.numeric(processed.monthly.risk.variance60),
dim = dim(processed.monthly.risk.variance60))
colnames(processed.monthly.risk.variance60) <- risk.variance60.column.names
row.names(processed.monthly.risk.variance60) <- risk.variance60.row.names
####delete the data of 2018-1
processed.monthly.risk.variance60 <- processed.monthly.risk.variance60[-nrow(processed.monthly.risk.variance60),]
row.names(processed.monthly.risk.variance60)
delimitvalue.monthly.risk.variance60 <- apply(processed.monthly.risk.variance60, 1, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
delimitvalue.monthly.risk.variance60 <- apply(delimitvalue.monthly.risk.variance60, 2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
preProcValues <- preProcess(delimitvalue.monthly.risk.variance60, method = c("center","scale"))
standardlized.monthly.risk.variance60 <- predict(preProcValues, delimitvalue.monthly.risk.variance60)
standardlized.monthly.risk.variance60[is.na(standardlized.monthly.risk.variance60)] <- 0
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.roe.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.roe.data.csv",
stringsAsFactors = FALSE)
processed.monthly.roe.data <- t(monthly.roe.data[,-c(1,ncol(monthly.roe.data))])
roe.data.column.names <- monthly.roe.data[,1]
roe.data.row.names <- colnames(monthly.roe.data)[-c(1, length(monthly.roe.data))]
processed.monthly.roe.data <- array(as.numeric(processed.monthly.roe.data),
dim = dim(processed.monthly.roe.data))
colnames(processed.monthly.roe.data) <- roe.data.column.names
row.names(processed.monthly.roe.data) <- roe.data.row.names
####delete the data of 2018-1
processed.monthly.roe.data <- processed.monthly.roe.data[-nrow(processed.monthly.roe.data),]
delimitvalue.monthly.roe.data <- apply(processed.monthly.roe.data, 1, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
delimitvalue.monthly.roe.data <- apply(delimitvalue.monthly.roe.data, 2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
preProcValues <- preProcess(delimitvalue.monthly.roe.data, method = c("center","scale"))
standardlized.monthly.roe.data <- predict(preProcValues, delimitvalue.monthly.roe.data)
standardlized.monthly.roe.data[is.na(standardlized.monthly.roe.data)] <- 0
colnames(standardlized.monthly.roe.data)
View(standardlized.monthly.roe.data)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.tech.turnoverrate60 <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.tech.turnoverrate60.csv",
stringsAsFactors = FALSE)
processed.monthly.tech.turnoverrate60 <- t(monthly.tech.turnoverrate60[,-c(1,ncol(monthly.tech.turnoverrate60))])
turnoverrate60.data.column.names <- monthly.tech.turnoverrate60[,1]
turnoverrate60.data.row.names <- colnames(monthly.tech.turnoverrate60)[-c(1, length(monthly.tech.turnoverrate60))]
processed.monthly.tech.turnoverrate60 <- array(as.numeric(processed.monthly.tech.turnoverrate60),
dim = dim(processed.monthly.tech.turnoverrate60))
colnames(processed.monthly.tech.turnoverrate60) <- turnoverrate60.data.column.names
row.names(processed.monthly.tech.turnoverrate60) <- turnoverrate60.data.row.names
####delete the data of 2018-1
processed.monthly.tech.turnoverrate60 <- processed.monthly.tech.turnoverrate60[-nrow(processed.monthly.tech.turnoverrate60),]
delimitvalue.monthly.tech.turnoverrate60 <- apply(processed.monthly.tech.turnoverrate60, 1, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
delimitvalue.monthly.tech.turnoverrate60 <- apply(delimitvalue.monthly.tech.turnoverrate60, 2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
preProcValues <- preProcess(delimitvalue.monthly.tech.turnoverrate60, method = c("center","scale"))
standardlized.monthly.tech.turnoverrate60 <- predict(preProcValues, delimitvalue.monthly.tech.turnoverrate60)
standardlized.monthly.tech.turnoverrate60[is.na(standardlized.monthly.tech.turnoverrate60)] <- 0
colnames(standardlized.monthly.tech.turnoverrate60)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.val.lnmv <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.val.lnmv.csv",
stringsAsFactors = FALSE)
processed.monthly.val.lnmv <- monthly.val.lnmv[,-1]
row.names(processed.monthly.val.lnmv) <- monthly.val.lnmv[,1]
####delete the data of 2018-1
processed.monthly.val.lnmv <- processed.monthly.val.lnmv[,-ncol(processed.monthly.val.lnmv)]
delimitvalue.monthly.val.lnmv <- apply(processed.monthly.val.lnmv,2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
### 两次去极值
delimitvalue.monthly.val.lnmv <- apply(delimitvalue.monthly.val.lnmv, 2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
preProcValues <- preProcess(delimitvalue.monthly.val.lnmv, method = c("center","scale"))
standardlized.monthly.val.lnmv <- predict(preProcValues, delimitvalue.monthly.val.lnmv)
standardlized.monthly.val.lnmv[is.na(standardlized.monthly.val.lnmv)] <- 0
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.price.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.price.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.industry.data.csv",
stringsAsFactors = FALSE)
standardlized.monthly.holder.sumpcttop5 <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Bstandardlizefactor\\standardlized.monthly.holder.sumpcttop5.csv",
stringsAsFactors = FALSE)
monthly.industry.data <- monthly.industry.data[,-1]
row.names(monthly.price.data) <- monthly.price.data[,1]
monthly.price.data <- monthly.price.data[,-1]
monthly.price.data <- as.matrix(monthly.price.data)
View(monthly.price.data)
View(monthly.industry.data)
rm <- matrix(apply(monthly.price.data,2,mean),1)
rtn <- monthly.price.data - matrix(1,nrow(monthly.price.data),1) %*% rm
for(i in 1:nrow(rtn)){
# for(i in 1:1){
mainEffects <- dummyVars(as.formula(paste0(" ~ ", colnames(monthly.industry.data)[i + 1])),
data = monthly.industry.data[,c(1,(i + 1))])
ind.dum <- predict(mainEffects, monthly.industry.data[,c(1, (i + 1))])
ind.dum <- cbind(ind.dum, standardlized.monthly.holder.sumpcttop5[,(i + 1)])
F.hat.o <- solve(crossprod(ind.dum)) %*% t(ind.dum) %*% t(rtn)[,i]
# E.hat.o <- t(rtn)[,i] - ind.dum %*% F.hat.o
fit <- summary(lm(t(rtn)[,i] ~ ind.dum - 1))
if(i == 1){
result.F.hat.o <- F.hat.o
# result.E.hat.o <- E.hat.o
tvalue <- cbind(fit$coefficients[,3])
}else{
result.F.hat.o <- cbind(result.F.hat.o, F.hat.o)
# result.E.hat.o <- cbind(result.E.hat.o, E.hat.o)
tvalue <- cbind(tvalue,fit$coefficients[,3])
}
}
View(standardlized.monthly.holder.sumpcttop5)
mean(abs(tail(tvalue, 1)))
t.test(abs(tail(tvalue, 1)))
mean(abs(tail(tvalue, 1)) > 2)
t.test(tail(result.F.hat.o, 1))
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.price.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.price.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.industry.data.csv",
stringsAsFactors = FALSE)
standardlized.monthly.pettm.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Bstandardlizefactor\\standardlized.monthly.pettm.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <- monthly.industry.data[,-1]
row.names(monthly.price.data) <- monthly.price.data[,1]
monthly.price.data <- monthly.price.data[,-1]
monthly.price.data <- as.matrix(monthly.price.data)
dim(monthly.price.data)
row.names(monthly.price.data)
dim(monthly.industry.data)
colnames(monthly.industry.data)
dim(standardlized.monthly.pettm.data)
colnames(standardlized.monthly.pettm.data)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.price.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.price.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.industry.data.csv",
stringsAsFactors = FALSE)
standardlized.monthly.risk.variance60 <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Bstandardlizefactor\\standardlized.monthly.risk.variance60.csv",
stringsAsFactors = FALSE)
monthly.industry.data <- monthly.industry.data[,-1]
row.names(monthly.price.data) <- monthly.price.data[,1]
monthly.price.data <- monthly.price.data[,-1]
monthly.price.data <- as.matrix(monthly.price.data)
dim(monthly.price.data)
row.names(monthly.price.data)
dim(monthly.industry.data)
colnames(monthly.industry.data)
dim(standardlized.monthly.risk.variance60)
colnames(standardlized.monthly.risk.variance60)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.price.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.price.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.industry.data.csv",
stringsAsFactors = FALSE)
standardlized.monthly.roe.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Bstandardlizefactor\\standardlized.monthly.roe.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <- monthly.industry.data[,-1]
row.names(monthly.price.data) <- monthly.price.data[,1]
monthly.price.data <- monthly.price.data[,-1]
monthly.price.data <- as.matrix(monthly.price.data)
row.names(monthly.price.data)
colnames(monthly.industry.data)
colnames(standardlized.monthly.roe.data)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.price.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.price.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.industry.data.csv",
stringsAsFactors = FALSE)
standardlized.monthly.tech.turnoverrate60 <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Bstandardlizefactor\\standardlized.monthly.tech.turnoverrate60.csv",
stringsAsFactors = FALSE)
monthly.industry.data <- monthly.industry.data[,-1]
row.names(monthly.price.data) <- monthly.price.data[,1]
monthly.price.data <- monthly.price.data[,-1]
monthly.price.data <- as.matrix(monthly.price.data)
row.names(monthly.price.data)
colnames(monthly.industry.data)
colnames(standardlized.monthly.tech.turnoverrate60)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.price.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.price.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.industry.data.csv",
stringsAsFactors = FALSE)
standardlized.monthly.val.lnmv <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Bstandardlizefactor\\standardlized.monthly.val.lnmv.csv",
stringsAsFactors = FALSE)
monthly.industry.data <- monthly.industry.data[,-1]
row.names(monthly.price.data) <- monthly.price.data[,1]
monthly.price.data <- monthly.price.data[,-1]
monthly.price.data <- as.matrix(monthly.price.data)
row.names(monthly.price.data)
colnames(monthly.industry.data)
colnames(standardlized.monthly.val.lnmv)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.price.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.price.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.industry.data.csv",
stringsAsFactors = FALSE)
standardlized.monthly.rating.avg <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Bstandardlizefactor\\standardlized.monthly.rating.avg.csv",
stringsAsFactors = FALSE)
monthly.industry.data <- monthly.industry.data[,-1]
row.names(monthly.price.data) <- monthly.price.data[,1]
monthly.price.data <- monthly.price.data[,-1]
monthly.price.data <- as.matrix(monthly.price.data)
row.names(monthly.price.data)
colnames(monthly.industry.data)
colnames(standardlized.monthly.rating.avg)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.price.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.price.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.industry.data.csv",
stringsAsFactors = FALSE)
standardlized.monthly.momentum.12month <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Bstandardlizefactor\\standardlized.monthly.momentum.12month.csv",
stringsAsFactors = FALSE)
monthly.industry.data <- monthly.industry.data[,-1]
row.names(monthly.price.data) <- monthly.price.data[,1]
monthly.price.data <- monthly.price.data[,-1]
monthly.price.data <- as.matrix(monthly.price.data)
row.names(monthly.price.data)
colnames(monthly.industry.data)
colnames(standardlized.monthly.momentum.12month)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.price.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.price.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.industry.data.csv",
stringsAsFactors = FALSE)
standardlized.monthly.momentum.6month <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Bstandardlizefactor\\standardlized.monthly.momentum.6month.csv",
stringsAsFactors = FALSE)
monthly.industry.data <- monthly.industry.data[,-1]
row.names(monthly.price.data) <- monthly.price.data[,1]
monthly.price.data <- monthly.price.data[,-1]
monthly.price.data <- as.matrix(monthly.price.data)
row.names(monthly.price.data)
colnames(monthly.industry.data)
colnames(standardlized.monthly.momentum.6month)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.price.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.price.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.industry.data.csv",
stringsAsFactors = FALSE)
standardlized.monthly.deductprofit.simple.rate <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Bstandardlizefactor\\standardlized.monthly.deductprofit.simple.rate.csv",
stringsAsFactors = FALSE)
monthly.industry.data <- monthly.industry.data[,-1]
row.names(monthly.price.data) <- monthly.price.data[,1]
monthly.price.data <- monthly.price.data[,-1]
monthly.price.data <- as.matrix(monthly.price.data)
row.names(monthly.price.data)
colnames(monthly.industry.data)
colnames(standardlized.monthly.deductprofit.simple.rate)
