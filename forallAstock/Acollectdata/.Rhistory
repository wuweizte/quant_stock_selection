#####扣除非经常性损益后的净利润
# for(i in 1:length(tdate)){
for(i in 1:2){
tradedatepara <- paste0('tradeDate=', tdate[i])
w_wss_deductprofit_ttm<-w.wss('000001.SZ','fa_deductprofit_ttm',tradedatepara)
if(i == 1){
monthly.deductprofit.ttm <- w_wss_deductprofit_ttm$Data
}else{
monthly.deductprofit.ttm <- cbind(monthly.deductprofit.ttm,
w_wss_deductprofit_ttm$Data$FA_DEDUCTPROFIT_TTM)
}
}
View(monthly.deductprofit.ttm)
#####扣除非经常性损益后的净利润
for(i in 1:length(tdate)){
# for(i in 1:2){
tradedatepara <- paste0('tradeDate=', tdate[i])
w_wss_deductprofit_ttm<-w.wss(stockcode,'fa_deductprofit_ttm',tradedatepara)
if(i == 1){
monthly.deductprofit.ttm <- w_wss_deductprofit_ttm$Data
}else{
monthly.deductprofit.ttm <- cbind(monthly.deductprofit.ttm,
w_wss_deductprofit_ttm$Data$FA_DEDUCTPROFIT_TTM)
}
}
View(monthly.deductprofit.ttm)
dim(monthly.deductprofit.ttm)
colnames(monthly.deductprofit.ttm) <- c("code", paste0("d",tdate))
row.names(monthly.deductprofit.ttm) <- stockcode
str(monthly.deductprofit.ttm)
monthly.deductprofit.rate <- t(monthly.deductprofit.ttm[,-1])
View(monthly.deductprofit.rate)
str(monthly.deductprofit.rate)
monthly.deductprofit.rate <- t(monthly.deductprofit.ttm[,-1])
monthly.deductprofit.rate <- diff(log(monthly.deductprofit.rate))
view(t(monthly.deductprofit.ttm[,-1]))
View(t(monthly.deductprofit.ttm[,-1]))
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(WindR))
w.start()
w_wset_data<-w.wset('sectorconstituent','date=2018-01-25;sectorid=a001010100000000')
stockcode <- w_wset_data$Data$wind_code
w_tdays_data<-w.tdays("2007-12-01","2018-1-31","Period=M")
tdate <- as.character(w_tdays_data$Data$DATETIME)
tdate <- gsub("-","",tdate)
####万德平均评级
# for(i in 1:length(tdate)){
for(i in 1:1){
tradedatepara <- paste0('tradeDate=', tdate[i])
w_wss_rating_avg<-w.wss(stockcode,'rating_avg',tradedatepara)
if(i == 1){
monthly.rating.avg <- w_wss_rating_avg$Data
}else{
monthly.rating.avg <- cbind(monthly.rating.avg,
w_wss_rating_avg$Data$RATING_AVG)
}
}
View(monthly.rating.avg)
w.wss(stockcode,'rating_avg',tradedatepara)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
original.price.data <-
read.csv("originaldata\\original.price.data.csv",
stringsAsFactors = FALSE)
View(original.price.data)
row.names(original.price.data) <- original.price.data$X
original.price.data <- original.price.data[,-1]
monthly.momentum.6month <- t(original.price.data)
View(monthly.momentum.6month)
?diff
monthly.momentum.6month <- diff(ts(log(t(original.price.data))), lag = 6)
monthly.momentum.12month <- diff(ts(log(t(original.price.data))), lag = 12)
View(original.price.data)
row.names(monthly.momentum.6month) <- colnames(original.price.data)[-(1:6)]
row.names(monthly.momentum.12month) <- colnames(original.price.data)[-(1:12)]
View(monthly.momentum.12month)
row.names.momentum.6month <- colnames(original.price.data)[-(1:7)]
row.names.momentum.12month <- colnames(original.price.data)[-(1:13)]
monthly.momentum.6month <- monthly.momentum.6month[-nrow(monthly.momentum.6month),]
monthly.momentum.12month <- monthly.momentum.12month[-nrow(monthly.momentum.12month),]
row.names(monthly.momentum.6month) <- row.names.momentum.6month
row.names(monthly.momentum.12month) <- row.names.momentum.12month
View(monthly.momentum.12month)
write.csv(t(monthly.momentum.6month), "monthly.momentum.6month.csv")
write.csv(t(monthly.momentum.12month), "monthly.momentum.12month.csv")
monthly.momentum.6month <- monthly.momentum.6month[-c(1:6),]
write.csv(t(monthly.momentum.6month), "monthly.momentum.6month.csv")
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.val.lnmv <- read.csv("D:\\MyR\\quantprog\\Acollectdata\\monthly.val.lnmv.csv",
stringsAsFactors = FALSE)
View(monthly.val.lnmv)
ln2
log(2)
ln4
log(4)
log(20)
processed.monthly.val.lnmv <- monthly.holder.sumpcttop5[,-1]
View(processed.monthly.val.lnmv)
processed.monthly.val.lnmv <- monthly.val.lnmv[,-1]
View(processed.monthly.val.lnmv)
# processed.monthly.holder.sumpcttop5 <- t(monthly.holder.sumpcttop5[,-c(1,ncol(monthly.holder.sumpcttop5))])
processed.monthly.val.lnmv <- monthly.val.lnmv[,-1]
# holder.sumpcttop5.column.names <- monthly.holder.sumpcttop5[,1]
#
# holder.sumpcttop5.row.names <- colnames(monthly.holder.sumpcttop5)[-c(1, length(monthly.holder.sumpcttop5))]
#
#
# processed.monthly.holder.sumpcttop5 <- array(as.numeric(processed.monthly.holder.sumpcttop5),
#                                       dim = dim(processed.monthly.holder.sumpcttop5))
# colnames(processed.monthly.holder.sumpcttop5) <- holder.sumpcttop5.column.names
# row.names(processed.monthly.holder.sumpcttop5) <- holder.sumpcttop5.row.names
row.names(processed.monthly.val.lnmv) <- monthly.val.lnmv[,1]
####delete the data of 2007-12
# processed.monthly.holder.sumpcttop5 <- processed.monthly.holder.sumpcttop5[-1,]
processed.monthly.val.lnmv <- processed.monthly.val.lnmv[-1,]
monthly.val.lnmv <- read.csv("D:\\MyR\\quantprog\\Acollectdata\\monthly.val.lnmv.csv",
stringsAsFactors = FALSE)
# processed.monthly.holder.sumpcttop5 <- t(monthly.holder.sumpcttop5[,-c(1,ncol(monthly.holder.sumpcttop5))])
processed.monthly.val.lnmv <- monthly.val.lnmv[,-1]
# holder.sumpcttop5.column.names <- monthly.holder.sumpcttop5[,1]
#
# holder.sumpcttop5.row.names <- colnames(monthly.holder.sumpcttop5)[-c(1, length(monthly.holder.sumpcttop5))]
#
#
# processed.monthly.holder.sumpcttop5 <- array(as.numeric(processed.monthly.holder.sumpcttop5),
#                                       dim = dim(processed.monthly.holder.sumpcttop5))
# colnames(processed.monthly.holder.sumpcttop5) <- holder.sumpcttop5.column.names
# row.names(processed.monthly.holder.sumpcttop5) <- holder.sumpcttop5.row.names
row.names(processed.monthly.val.lnmv) <- monthly.val.lnmv[,1]
####delete the data of 2007-12
# processed.monthly.holder.sumpcttop5 <- processed.monthly.holder.sumpcttop5[-1,]
processed.monthly.val.lnmv <- processed.monthly.val.lnmv[,-1]
delimitvalue.monthly.val.lnmv <- apply(processed.monthly.val.lnmv,2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
View(delimitvalue.monthly.val.lnmv)
### 两次去极值
delimitvalue.monthly.val.lnmv <- apply(delimitvalue.monthly.val.lnmv, 2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
preProcValues <- preProcess(delimitvalue.monthly.val.lnmv, method = c("center","scale"))
standardlized.monthly.val.lnmv <- predict(preProcValues, delimitvalue.monthly.val.lnmv)
standardlized.monthly.val.lnmv[is.na(standardlized.monthly.val.lnmv)] <- 0
View(standardlized.monthly.val.lnmv)
write.csv(standardlized.monthly.val.lnmv,
"D:\\MyR\\quantprog\\Bstandardlizefactor\\standardlized.monthly.val.lnmv.csv")
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.rating.avg <- read.csv("D:\\MyR\\quantprog\\Acollectdata\\monthly.rating.avg.csv",
stringsAsFactors = FALSE)
processed.monthly.rating.avg <- monthly.rating.avg[,-1]
row.names(processed.monthly.rating.avg) <- monthly.rating.avg[,1]
####delete the data of 2007-12
processed.monthly.rating.avg <- processed.monthly.rating.avg[,-1]
delimitvalue.monthly.rating.avg <- apply(processed.monthly.rating.avg,2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
### 两次去极值
delimitvalue.monthly.rating.avg <- apply(delimitvalue.monthly.rating.avg, 2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
preProcValues <- preProcess(delimitvalue.monthly.rating.avg, method = c("center","scale"))
standardlized.monthly.rating.avg <- predict(preProcValues, delimitvalue.monthly.rating.avg)
standardlized.monthly.rating.avg[is.na(standardlized.monthly.rating.avg)] <- 0
View(standardlized.monthly.rating.avg)
View(monthly.rating.avg)
write.csv(standardlized.monthly.rating.avg,
"D:\\MyR\\quantprog\\Bstandardlizefactor\\standardlized.monthly.rating.avg.csv")
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
original.price.data <-
read.csv("originaldata\\original.price.data.csv",
stringsAsFactors = FALSE)
row.names(original.price.data) <- original.price.data$X
original.price.data <- original.price.data[,-1]
monthly.momentum.6month <- diff(ts(log(t(original.price.data))), lag = 6)
monthly.momentum.12month <- diff(ts(log(t(original.price.data))), lag = 12)
View(monthly.momentum.12month)
View(original.price.data)
monthly.momentum.6month <- monthly.momentum.6month[-nrow(monthly.momentum.6month),]
monthly.momentum.12month <- monthly.momentum.12month[-nrow(monthly.momentum.12month),]
row.names.momentum.6month <- colnames(original.price.data)[-c(1:6,length(original.price.data))]
row.names.momentum.12month <- colnames(original.price.data)[-c(1:12,length(original.price.data))]
row.names(monthly.momentum.6month) <- row.names.momentum.6month
row.names(monthly.momentum.12month) <- row.names.momentum.12month
View(monthly.momentum.6month)
monthly.momentum.6month <- monthly.momentum.6month[-c(1:6),]
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
monthly.deductprofit.ttm <-
read.csv("D:\\MyR\\quantprog\\Acollectdata\\originaldata.deductprofit.rate.csv",
stringsAsFactors = FALSE)
monthly.deductprofit.ttm <-
read.csv("D:\\MyR\\quantprog\\Acollectdata\\originaldata\\originaldata.deductprofit.rate.csv",
stringsAsFactors = FALSE)
monthly.deductprofit.ttm <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\originaldata\\originaldata.deductprofit.rate.csv",
stringsAsFactors = FALSE)
row.names(monthly.deductprofit.ttm) <- monthly.deductprofit.ttm$X
monthly.deductprofit.ttm <- monthly.deductprofit.ttm[,-1]
monthly.deductprofit.ttm[is.na(monthly.deductprofit.ttm)] <- 0
deductprofit.rate.numerator <- diff(ts(monthly.deductprofit.ttm))
deductprofit.rate.denominator <- abs(monthly.deductprofit.ttm[-nrow(monthly.deductprofit.ttm),])
monthly.deductprofit.simple.rate <- as.matrix(deductprofit.rate.numerator) / as.matrix(deductprofit.rate.denominator)
row.names(monthly.deductprofit.simple.rate) <- row.names(monthly.deductprofit.ttm)[-1]
View(monthly.deductprofit.simple.rate)
monthly.deductprofit.simple.rate <- monthly.deductprofit.simple.rate[-(1:3),]
monthly.deductprofit.simple.rate[is.nan(monthly.deductprofit.simple.rate)] <- 0
monthly.deductprofit.simple.rate[is.infinite(monthly.deductprofit.simple.rate)] <- 0
monthly.deductprofit.simple.rate <- apply(monthly.deductprofit.simple.rate, 2 , function(x){
for(i in 1:(length(x) - 1)){
if (x[i + 1] == 0 && x[i] != 0) x[i + 1] <- x[i]
}
return(x)
})
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.deductprofit.simple.rate <- read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.deductprofit.simple.rate.csv",
stringsAsFactors = FALSE)
View(monthly.deductprofit.simple.rate)
processed.monthly.deductprofit.simple.rate <- monthly.deductprofit.simple.rate[,-1]
row.names(processed.monthly.deductprofit.simple.rate) <- monthly.deductprofit.simple.rate[,1]
delimitvalue.monthly.deductprofit.simple.rate <-
apply(processed.monthly.deductprofit.simple.rate, 2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
if(md.sd == 0){
md.sd <- sd(x)
}
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
### 两次去极值
delimitvalue.monthly.deductprofit.simple.rate <- apply(delimitvalue.monthly.deductprofit.simple.rate, 2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
if(md.sd == 0){
md.sd <- sd(x)
}
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
preProcValues <- preProcess(delimitvalue.monthly.deductprofit.simple.rate, method = c("center","scale"))
standardlized.monthly.deductprofit.simple.rate <- predict(preProcValues, delimitvalue.monthly.deductprofit.simple.rate)
standardlized.monthly.deductprofit.simple.rate[is.na(standardlized.monthly.deductprofit.simple.rate)] <- 0
View(standardlized.monthly.deductprofit.simple.rate)
colnames(standardlized.monthly.deductprofit.simple.rate)
standardlized.monthly.deductprofit.simple.rate <- standardlized.monthly.deductprofit.simple.rate[,-ncol(standardlized.monthly.deductprofit.simple.rate)]
colnames(standardlized.monthly.deductprofit.simple.rate)
write.csv(standardlized.monthly.deductprofit.simple.rate,
"standardlized.monthly.deductprofit.simple.rate.csv")
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.holder.sumpcttop5 <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.holder.sumpcttop5.csv",
stringsAsFactors = FALSE)
processed.monthly.holder.sumpcttop5 <- t(monthly.holder.sumpcttop5[,-c(1,ncol(monthly.holder.sumpcttop5))])
holder.sumpcttop5.column.names <- monthly.holder.sumpcttop5[,1]
holder.sumpcttop5.row.names <- colnames(monthly.holder.sumpcttop5)[-c(1, length(monthly.holder.sumpcttop5))]
processed.monthly.holder.sumpcttop5 <- array(as.numeric(processed.monthly.holder.sumpcttop5),
dim = dim(processed.monthly.holder.sumpcttop5))
colnames(processed.monthly.holder.sumpcttop5) <- holder.sumpcttop5.column.names
row.names(processed.monthly.holder.sumpcttop5) <- holder.sumpcttop5.row.names
####delete the data of 2007-12
# processed.monthly.holder.sumpcttop5 <- processed.monthly.holder.sumpcttop5[-1,]
delimitvalue.monthly.holder.sumpcttop5 <- apply(processed.monthly.holder.sumpcttop5, 1, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
### 两次去极值
delimitvalue.monthly.holder.sumpcttop5 <- apply(delimitvalue.monthly.holder.sumpcttop5, 2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
preProcValues <- preProcess(delimitvalue.monthly.holder.sumpcttop5, method = c("center","scale"))
standardlized.monthly.holder.sumpcttop5 <- predict(preProcValues, delimitvalue.monthly.holder.sumpcttop5)
standardlized.monthly.holder.sumpcttop5[is.na(standardlized.monthly.holder.sumpcttop5)] <- 0
View(standardlized.monthly.holder.sumpcttop5)
colnames(standardlized.monthly.holder.sumpcttop5)
standardlized.monthly.holder.sumpcttop5 <-
standardlized.monthly.holder.sumpcttop5[,-ncol(standardlized.monthly.holder.sumpcttop5)]
names(standardlized.monthly.holder.sumpcttop5)
colnames(standardlized.monthly.holder.sumpcttop5)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.momentum.6month <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.momentum.6month.csv",
stringsAsFactors = FALSE)
processed.monthly.momentum.6month <- monthly.momentum.6month[,-1]
row.names(processed.monthly.momentum.6month) <- monthly.momentum.6month[,1]
delimitvalue.monthly.momentum.6month <- apply(processed.monthly.momentum.6month,2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
### 两次去极值
delimitvalue.monthly.momentum.6month <- apply(delimitvalue.monthly.momentum.6month, 2, function(x) {
median.value <- median(x, na.rm = TRUE)
md.sd <- median(abs(x - median.value), na.rm = TRUE)
# browser()
uplimit <- median.value + 3 * md.sd
lowlimit <- median.value - 3 * md.sd
x[x > uplimit] <- uplimit
x[x < lowlimit] <- lowlimit
return(x)
})
preProcValues <- preProcess(delimitvalue.monthly.momentum.6month, method = c("center","scale"))
standardlized.monthly.momentum.6month <- predict(preProcValues, delimitvalue.monthly.momentum.6month)
standardlized.monthly.momentum.6month[is.na(standardlized.monthly.momentum.6month)] <- 0
colnames(standardlized.monthly.momentum.6month)
monthly.price.data <- read.csv("monthly.price.data.csv")
monthly.industry.data <- read.csv("monthly.industry.data.csv")
View(monthly.industry.data)
monthly.industry.data <- monthly.industry.data[,-1]
View(monthly.price.data)
row.names(monthly.price.data) <- monthly.price.data[,1]
monthly.price.data <- monthly.price.data[,-1]
nan.code.industry.data <- monthly.industry.data[monthly.industry.data[,2] == "NaN",1]
# nan.code.industry.data <- monthly.industry.data[monthly.industry.data[,2] == "NaN",1]
head(nan.code.industry.data)
nan.code.price.data <- monthly.price.data[monthly.price.data[1,] == "NaN",]
head(nan.code.price.data)
head(unlist(nan.code.price.data))
summary(monthly.price.data[1,])
str(monthly.price.data)
monthly.price.data <- as.matrix(monthly.price.data)
str(monthly.price.data)
summary(monthly.price.data[1,])
summary(monthly.price.data[1,nan.code.industry.data])
sum(monthly.price.data[1,nan.code.industry.data])
for(i in 1:1){
nan.code.industry.data <- monthly.industry.data[monthly.industry.data[,(i + 1)] == "NaN",1]
sum(monthly.price.data[i,nan.code.industry.data])
}
for(i in 1:1){
nan.code.industry.data <- monthly.industry.data[monthly.industry.data[,(i + 1)] == "NaN",1]
result <- sum(monthly.price.data[i,nan.code.industry.data])
print(result)
}
for(i in 1:2){
nan.code.industry.data <- monthly.industry.data[monthly.industry.data[,(i + 1)] == "NaN",1]
result <- sum(monthly.price.data[i,nan.code.industry.data])
print(result)
}
for(i in 1:2){
nan.code.industry.data <- monthly.industry.data[monthly.industry.data[,(i + 1)] == "NaN",1]
result <- sum(monthly.price.data[i,nan.code.industry.data])
print(length(nan.code.industry.data))
print(result)
}
for(i in 1:20){
nan.code.industry.data <- monthly.industry.data[monthly.industry.data[,(i + 1)] == "NaN",1]
result <- sum(monthly.price.data[i,nan.code.industry.data])
print(length(nan.code.industry.data))
print(result)
}
result.price <- numeric(nrow(monthly.price.data))
result.length <- numeric(nrow(monthly.price.data))
for(i in 1:nrow(monthly.price.data)){
nan.code.industry.data <- monthly.industry.data[monthly.industry.data[,(i + 1)] == "NaN",1]
result.price[i] <- sum(monthly.price.data[i,nan.code.industry.data])
result.length[i] <- length(nan.code.industry.data)
}
summary(result.price)
summary(result.length)
rm(list = ls())
suppressMessages(library(lubridate))
suppressMessages(library(caret))
suppressMessages(library(plyr))
library(sca)
monthly.price.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.price.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <-
read.csv("D:\\MyR\\quantprog\\forallAstock\\Acollectdata\\monthly.industry.data.csv",
stringsAsFactors = FALSE)
monthly.industry.data <- monthly.industry.data[,-1]
row.names(monthly.price.data) <- monthly.price.data[,1]
monthly.price.data <- monthly.price.data[,-1]
monthly.price.data <- as.matrix(monthly.price.data)
for(i in 1:nrow(rtn)){
# for(i in 1:1){
mainEffects <- dummyVars(as.formula(paste0(" ~ ", colnames(monthly.industry.data)[i + 1])),
data = monthly.industry.data[,c(1,(i + 1))])
ind.dum <- predict(mainEffects, monthly.industry.data[,c(1, (i + 1))])
F.hat.o <- solve(crossprod(ind.dum)) %*% t(ind.dum) %*% t(rtn)[,i]
E.hat.o <- t(rtn)[,i] - ind.dum %*% F.hat.o
if(i == 1){
result.F.hat.o <- F.hat.o
result.E.hat.o <- E.hat.o
}else{
result.F.hat.o <- cbind(result.F.hat.o, F.hat.o)
result.E.hat.o <- cbind(result.E.hat.o, E.hat.o)
}
}
# rm <- matrix(apply(monthly.price.data,2,mean),1)
# rtn <- monthly.price.data - matrix(1,nrow(monthly.price.data),1) %*% rm
rtn <- monthly.price.data
for(i in 1:nrow(rtn)){
# for(i in 1:1){
mainEffects <- dummyVars(as.formula(paste0(" ~ ", colnames(monthly.industry.data)[i + 1])),
data = monthly.industry.data[,c(1,(i + 1))])
ind.dum <- predict(mainEffects, monthly.industry.data[,c(1, (i + 1))])
F.hat.o <- solve(crossprod(ind.dum)) %*% t(ind.dum) %*% t(rtn)[,i]
E.hat.o <- t(rtn)[,i] - ind.dum %*% F.hat.o
if(i == 1){
result.F.hat.o <- F.hat.o
result.E.hat.o <- E.hat.o
}else{
result.F.hat.o <- cbind(result.F.hat.o, F.hat.o)
result.E.hat.o <- cbind(result.E.hat.o, E.hat.o)
}
}
View(result.F.hat.o)
rm <- matrix(apply(monthly.price.data,2,mean),1)
rtn <- monthly.price.data - matrix(1,nrow(monthly.price.data),1) %*% rm
# rtn <- monthly.price.data
for(i in 1:nrow(rtn)){
# for(i in 1:1){
mainEffects <- dummyVars(as.formula(paste0(" ~ ", colnames(monthly.industry.data)[i + 1])),
data = monthly.industry.data[,c(1,(i + 1))])
ind.dum <- predict(mainEffects, monthly.industry.data[,c(1, (i + 1))])
F.hat.o <- solve(crossprod(ind.dum)) %*% t(ind.dum) %*% t(rtn)[,i]
E.hat.o <- t(rtn)[,i] - ind.dum %*% F.hat.o
if(i == 1){
result.F.hat.o <- F.hat.o
result.E.hat.o <- E.hat.o
}else{
result.F.hat.o <- cbind(result.F.hat.o, F.hat.o)
result.E.hat.o <- cbind(result.E.hat.o, E.hat.o)
}
}
View(result.F.hat.o)
lm(y~x)
x <- c(1:5, NA)
y <- c(2:6, NA)
lm(y~x)
?lm
